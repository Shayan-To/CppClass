In the name of God

==============================
1

! Introduction
? A + B
? 1 to n

==============================
2

? Is even
? Divisors count
? Is prime
? 1 to n that sum of divisors (except itself) equals itself
?*(x, y, z) | x <= y <= z <= n & x + y = z
------------------------------
?-(x, y, z) | x <= y <= z <= n & x + y = z
?-(x, y, z) | x <= y <= z <= n & x^2 + y^2 = z^2 # And their count

==============================
3

? (x, y, z) | x, y, z <= n
? (x, y, z) | x <= y <= z <= n & x + y = z
? (x, y, z) | x <= y <= z <= n & x^2 + y^2 = z^2
?*Print an isosceles triangle with asterisks
------------------------------
? Print a right isosceles triangle with height n
? Print a parallelogram with height n and width 20
?-Print an isosceles triangle with height n
?-Sum of n numbers
?-All primes < n.

==============================
4

? Print an isosceles triangle with height n
? Sum of n numbers
? All primes < n.
------------------------------
? Min and max of n numbers
? Digits count

==============================
5

! GCD, ladder method
? GCD
! Bubble sort
?*Bubble sort
------------------------------
? List reverse and print
? LCM
? GCD and LCM of n numbers

==============================
6

? Bubble sort
?%Insertion sort
------------------------------
? Fibonacci
? Number < n with the most divisors

==============================
7

! Prime sieve
? Prime sieve
------------------------------
? PE 1, 2, 5, 6, 7

==============================
8

! Base change
? Base change
! Logarithmic power
? Logarithmic power
------------------------------
? PE 9, 10, 12

==============================
9

! String (size, [])
? Get a string and n characters, occurences count
! String (substr, +)
?%Get a string and n strings, occurences count
------------------------------

==============================
10

? Get a string and n strings, occurences count
? 746B Remove middle character of a string repeatedly, put them in a line (zopda -> podza)
?%Reverse the previous action
------------------------------
? PE 4, 8

==============================
11

...

==============================
12

? Big integer addition
------------------------------
? PE 13

==============================
13

! Introduction to functions
? Reimplement big integer addition using functions {to_bignum(string): vector, show(vector), add_to(vector&, vector), mult_to(vector&, int), mult(vector, vector)}
------------------------------

==============================
14

? Continue implementing big integer
------------------------------

==============================
15

? Continue implementing big integer
------------------------------

==============================
16

? Continue implementing big integer
------------------------------

==============================
17

! Recursion
? Fibonacci
? GCD
------------------------------

==============================

18

? GCD
? Print vector getting n
? Hanoi
------------------------------

==============================

19
